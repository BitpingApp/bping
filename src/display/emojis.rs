/// Generated by https://quicktype.io

extern crate serde_json;
use std::{collections::HashMap};
static mut EMOJI_MAP: Option<HashMap<String, String>> = None;


pub fn get_emoji_for_country_code(code: String) -> Option<String> {
  unsafe {
    if let Some(map) = &EMOJI_MAP {
      match map.get(&code) {
        Some(c) => return Some(c.to_string()),
        None => return None
      }
    }
  }
  
  let bytes = include_bytes!("./countries.emoji.min.toml");

  let parsed_emojis: HashMap<String, String> = match toml::from_slice::<HashMap<String, String>>(bytes) {
    Ok(v) => {
      let thing = v.clone();
      unsafe {
        EMOJI_MAP = Some(thing); 
      };
      v
    },
    Err(e) => {
      log::error!("Error {}", e);
      return None
    }
  };

  match parsed_emojis.get(&code) {
    Some(c) => return Some(c.to_string()),
    None => return None
  }
}